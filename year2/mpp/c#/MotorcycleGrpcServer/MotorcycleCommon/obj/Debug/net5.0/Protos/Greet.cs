// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/greet.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace grpc {

  /// <summary>Holder for reflection information generated from Protos/greet.proto</summary>
  public static partial class GreetReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/greet.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GreetReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJQcm90b3MvZ3JlZXQucHJvdG8SCm1vdG9yY3ljbGUiRAoEVXNlchIKCgJp",
            "ZBgBIAEoBRIMCgRuYW1lGAIgASgJEhAKCHVzZXJuYW1lGAMgASgJEhAKCHBh",
            "c3N3b3JkGAQgASgJIi0KB1VzZXJEdG8SEAoIdXNlcm5hbWUYASABKAkSEAoI",
            "cGFzc3dvcmQYAiABKAkiJAoEUmFjZRIKCgJpZBgBIAEoBRIQCghjYXBhY2l0",
            "eRgCIAEoBSI4CgdSYWNlRHRvEh4KBHJhY2UYASABKAsyEC5tb3RvcmN5Y2xl",
            "LlJhY2USDQoFY291bnQYAiABKAUiRwoLUGFydGljaXBhbnQSCgoCaWQYASAB",
            "KAUSDgoGcmFjZUlkGAIgASgFEg4KBnRlYW1JZBgDIAEoBRIMCgRuYW1lGAQg",
            "ASgJIl4KDlBhcnRpY2lwYW50RHRvEh4KBHJhY2UYASABKAsyEC5tb3RvcmN5",
            "Y2xlLlJhY2USLAoLcGFydGljaXBhbnQYAiABKAsyFy5tb3RvcmN5Y2xlLlBh",
            "cnRpY2lwYW50IkIKDkNyZWRlbnRpYWxzRHRvEgwKBG5hbWUYASABKAkSEAoI",
            "dGVhbU5hbWUYAiABKAkSEAoIY2FwYWNpdHkYAyABKAUi0gIKB1JlcXVlc3QS",
            "LQoEdHlwZRgBIAEoDjIfLm1vdG9yY3ljbGUuUmVxdWVzdC5SZXF1ZXN0VHlw",
            "ZRImCgd1c2VyRHRvGAIgASgLMhMubW90b3JjeWNsZS5Vc2VyRHRvSAASEgoI",
            "Y2FwYWNpdHkYAyABKAVIABISCgh0ZWFtTmFtZRgEIAEoCUgAEjQKDmNyZWRl",
            "bnRpYWxzRHRvGAUgASgLMhoubW90b3JjeWNsZS5DcmVkZW50aWFsc0R0b0gA",
            "Eg0KBWVycm9yGAYgASgJInsKC1JlcXVlc3RUeXBlEgkKBUxPR0lOEAASDQoJ",
            "R0VUX1JBQ0VTEAESEAoMU0VBUkNIX1JBQ0VTEAISEAoMRklMVEVSX1JBQ0VT",
            "EAMSFAoQR0VUX1BBUlRJQ0lQQU5UUxAEEgwKCFJFR0lTVEVSEAUSCgoGTE9H",
            "T1VUEAZCBgoEZGF0YSLJAgoIUmVzcG9uc2USLwoEdHlwZRgBIAEoDjIhLm1v",
            "dG9yY3ljbGUuUmVzcG9uc2UuUmVzcG9uc2VUeXBlEh4KBHVzZXIYAiABKAsy",
            "EC5tb3RvcmN5Y2xlLlVzZXISHwoFcmFjZXMYAyADKAsyEC5tb3RvcmN5Y2xl",
            "LlJhY2USJQoIcmFjZUR0b3MYBCADKAsyEy5tb3RvcmN5Y2xlLlJhY2VEdG8S",
            "JAoHcmFjZUR0bxgFIAEoCzITLm1vdG9yY3ljbGUuUmFjZUR0bxIwCgxwYXJ0",
            "aWNpcGFudHMYBiADKAsyGi5tb3RvcmN5Y2xlLlBhcnRpY2lwYW50RHRvEg0K",
            "BWVycm9yGAcgASgJIj0KDFJlc3BvbnNlVHlwZRIGCgJPSxAAEgkKBUVSUk9S",
            "EAESGgoWUkVHSVNURVJFRF9QQVJUSUNJUEFOVBACMoYEChJNb3RvcmN5Y2xl",
            "U2VydmljZXMSOwoMYXV0aGVudGljYXRlEhMubW90b3JjeWNsZS5SZXF1ZXN0",
            "GhQubW90b3JjeWNsZS5SZXNwb25zZSIAEkAKEUdldFJhY2VCeUNhcGFjaXR5",
            "EhMubW90b3JjeWNsZS5SZXF1ZXN0GhQubW90b3JjeWNsZS5SZXNwb25zZSIA",
            "EjsKDEdldFJhY2VJbmZvcxITLm1vdG9yY3ljbGUuUmVxdWVzdBoULm1vdG9y",
            "Y3ljbGUuUmVzcG9uc2UiABI3CghHZXRSYWNlcxITLm1vdG9yY3ljbGUuUmVx",
            "dWVzdBoULm1vdG9yY3ljbGUuUmVzcG9uc2UiABJIChlHZXRSYWNlUGFydGlj",
            "aXBhbnRzQnlUZWFtEhMubW90b3JjeWNsZS5SZXF1ZXN0GhQubW90b3JjeWNs",
            "ZS5SZXNwb25zZSIAEkIKE1JlZ2lzdGVyUGFydGljaXBhbnQSEy5tb3RvcmN5",
            "Y2xlLlJlcXVlc3QaFC5tb3RvcmN5Y2xlLlJlc3BvbnNlIgASNQoGTG9nT3V0",
            "EhMubW90b3JjeWNsZS5SZXF1ZXN0GhQubW90b3JjeWNsZS5SZXNwb25zZSIA",
            "EjYKBUxvZ0luEhMubW90b3JjeWNsZS5SZXF1ZXN0GhQubW90b3JjeWNsZS5S",
            "ZXNwb25zZSIAMAFCHAoEZ3JwY0IFcHJvdG9QAaICA0hMV6oCBGdycGNiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::grpc.User), global::grpc.User.Parser, new[]{ "Id", "Name", "Username", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpc.UserDto), global::grpc.UserDto.Parser, new[]{ "Username", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpc.Race), global::grpc.Race.Parser, new[]{ "Id", "Capacity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpc.RaceDto), global::grpc.RaceDto.Parser, new[]{ "Race", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpc.Participant), global::grpc.Participant.Parser, new[]{ "Id", "RaceId", "TeamId", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpc.ParticipantDto), global::grpc.ParticipantDto.Parser, new[]{ "Race", "Participant" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpc.CredentialsDto), global::grpc.CredentialsDto.Parser, new[]{ "Name", "TeamName", "Capacity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpc.Request), global::grpc.Request.Parser, new[]{ "Type", "UserDto", "Capacity", "TeamName", "CredentialsDto", "Error" }, new[]{ "Data" }, new[]{ typeof(global::grpc.Request.Types.RequestType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpc.Response), global::grpc.Response.Parser, new[]{ "Type", "User", "Races", "RaceDtos", "RaceDto", "Participants", "Error" }, null, new[]{ typeof(global::grpc.Response.Types.ResponseType) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class User : pb::IMessage<User>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<User> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpc.GreetReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User(User other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User Clone() {
      return new User(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 3;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 4;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as User);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(User other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(User other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Username = input.ReadString();
            break;
          }
          case 34: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Username = input.ReadString();
            break;
          }
          case 34: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserDto : pb::IMessage<UserDto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserDto> _parser = new pb::MessageParser<UserDto>(() => new UserDto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserDto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpc.GreetReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDto(UserDto other) : this() {
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDto Clone() {
      return new UserDto(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserDto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserDto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserDto other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Race : pb::IMessage<Race>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Race> _parser = new pb::MessageParser<Race>(() => new Race());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Race> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpc.GreetReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Race() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Race(Race other) : this() {
      id_ = other.id_;
      capacity_ = other.capacity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Race Clone() {
      return new Race(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "capacity" field.</summary>
    public const int CapacityFieldNumber = 2;
    private int capacity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Capacity {
      get { return capacity_; }
      set {
        capacity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Race);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Race other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Capacity != other.Capacity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Capacity != 0) hash ^= Capacity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Capacity != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Capacity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Capacity != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Capacity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Capacity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Capacity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Race other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Capacity != 0) {
        Capacity = other.Capacity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Capacity = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Capacity = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RaceDto : pb::IMessage<RaceDto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RaceDto> _parser = new pb::MessageParser<RaceDto>(() => new RaceDto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RaceDto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpc.GreetReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceDto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceDto(RaceDto other) : this() {
      race_ = other.race_ != null ? other.race_.Clone() : null;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceDto Clone() {
      return new RaceDto(this);
    }

    /// <summary>Field number for the "race" field.</summary>
    public const int RaceFieldNumber = 1;
    private global::grpc.Race race_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::grpc.Race Race {
      get { return race_; }
      set {
        race_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RaceDto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RaceDto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Race, other.Race)) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (race_ != null) hash ^= Race.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (race_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Race);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (race_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Race);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (race_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Race);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RaceDto other) {
      if (other == null) {
        return;
      }
      if (other.race_ != null) {
        if (race_ == null) {
          Race = new global::grpc.Race();
        }
        Race.MergeFrom(other.Race);
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (race_ == null) {
              Race = new global::grpc.Race();
            }
            input.ReadMessage(Race);
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (race_ == null) {
              Race = new global::grpc.Race();
            }
            input.ReadMessage(Race);
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Participant : pb::IMessage<Participant>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Participant> _parser = new pb::MessageParser<Participant>(() => new Participant());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Participant> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpc.GreetReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Participant() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Participant(Participant other) : this() {
      id_ = other.id_;
      raceId_ = other.raceId_;
      teamId_ = other.teamId_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Participant Clone() {
      return new Participant(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "raceId" field.</summary>
    public const int RaceIdFieldNumber = 2;
    private int raceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RaceId {
      get { return raceId_; }
      set {
        raceId_ = value;
      }
    }

    /// <summary>Field number for the "teamId" field.</summary>
    public const int TeamIdFieldNumber = 3;
    private int teamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TeamId {
      get { return teamId_; }
      set {
        teamId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Participant);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Participant other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (RaceId != other.RaceId) return false;
      if (TeamId != other.TeamId) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (RaceId != 0) hash ^= RaceId.GetHashCode();
      if (TeamId != 0) hash ^= TeamId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RaceId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RaceId);
      }
      if (TeamId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TeamId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RaceId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RaceId);
      }
      if (TeamId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TeamId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (RaceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RaceId);
      }
      if (TeamId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TeamId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Participant other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.RaceId != 0) {
        RaceId = other.RaceId;
      }
      if (other.TeamId != 0) {
        TeamId = other.TeamId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RaceId = input.ReadInt32();
            break;
          }
          case 24: {
            TeamId = input.ReadInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RaceId = input.ReadInt32();
            break;
          }
          case 24: {
            TeamId = input.ReadInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ParticipantDto : pb::IMessage<ParticipantDto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ParticipantDto> _parser = new pb::MessageParser<ParticipantDto>(() => new ParticipantDto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantDto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpc.GreetReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantDto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantDto(ParticipantDto other) : this() {
      race_ = other.race_ != null ? other.race_.Clone() : null;
      participant_ = other.participant_ != null ? other.participant_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantDto Clone() {
      return new ParticipantDto(this);
    }

    /// <summary>Field number for the "race" field.</summary>
    public const int RaceFieldNumber = 1;
    private global::grpc.Race race_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::grpc.Race Race {
      get { return race_; }
      set {
        race_ = value;
      }
    }

    /// <summary>Field number for the "participant" field.</summary>
    public const int ParticipantFieldNumber = 2;
    private global::grpc.Participant participant_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::grpc.Participant Participant {
      get { return participant_; }
      set {
        participant_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantDto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantDto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Race, other.Race)) return false;
      if (!object.Equals(Participant, other.Participant)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (race_ != null) hash ^= Race.GetHashCode();
      if (participant_ != null) hash ^= Participant.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (race_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Race);
      }
      if (participant_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Participant);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (race_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Race);
      }
      if (participant_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Participant);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (race_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Race);
      }
      if (participant_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Participant);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantDto other) {
      if (other == null) {
        return;
      }
      if (other.race_ != null) {
        if (race_ == null) {
          Race = new global::grpc.Race();
        }
        Race.MergeFrom(other.Race);
      }
      if (other.participant_ != null) {
        if (participant_ == null) {
          Participant = new global::grpc.Participant();
        }
        Participant.MergeFrom(other.Participant);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (race_ == null) {
              Race = new global::grpc.Race();
            }
            input.ReadMessage(Race);
            break;
          }
          case 18: {
            if (participant_ == null) {
              Participant = new global::grpc.Participant();
            }
            input.ReadMessage(Participant);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (race_ == null) {
              Race = new global::grpc.Race();
            }
            input.ReadMessage(Race);
            break;
          }
          case 18: {
            if (participant_ == null) {
              Participant = new global::grpc.Participant();
            }
            input.ReadMessage(Participant);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CredentialsDto : pb::IMessage<CredentialsDto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CredentialsDto> _parser = new pb::MessageParser<CredentialsDto>(() => new CredentialsDto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CredentialsDto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpc.GreetReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CredentialsDto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CredentialsDto(CredentialsDto other) : this() {
      name_ = other.name_;
      teamName_ = other.teamName_;
      capacity_ = other.capacity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CredentialsDto Clone() {
      return new CredentialsDto(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "teamName" field.</summary>
    public const int TeamNameFieldNumber = 2;
    private string teamName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TeamName {
      get { return teamName_; }
      set {
        teamName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "capacity" field.</summary>
    public const int CapacityFieldNumber = 3;
    private int capacity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Capacity {
      get { return capacity_; }
      set {
        capacity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CredentialsDto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CredentialsDto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (TeamName != other.TeamName) return false;
      if (Capacity != other.Capacity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (TeamName.Length != 0) hash ^= TeamName.GetHashCode();
      if (Capacity != 0) hash ^= Capacity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (TeamName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TeamName);
      }
      if (Capacity != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Capacity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (TeamName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TeamName);
      }
      if (Capacity != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Capacity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (TeamName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TeamName);
      }
      if (Capacity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Capacity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CredentialsDto other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.TeamName.Length != 0) {
        TeamName = other.TeamName;
      }
      if (other.Capacity != 0) {
        Capacity = other.Capacity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            TeamName = input.ReadString();
            break;
          }
          case 24: {
            Capacity = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            TeamName = input.ReadString();
            break;
          }
          case 24: {
            Capacity = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Request : pb::IMessage<Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpc.GreetReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      type_ = other.type_;
      error_ = other.error_;
      switch (other.DataCase) {
        case DataOneofCase.UserDto:
          UserDto = other.UserDto.Clone();
          break;
        case DataOneofCase.Capacity:
          Capacity = other.Capacity;
          break;
        case DataOneofCase.TeamName:
          TeamName = other.TeamName;
          break;
        case DataOneofCase.CredentialsDto:
          CredentialsDto = other.CredentialsDto.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::grpc.Request.Types.RequestType type_ = global::grpc.Request.Types.RequestType.Login;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::grpc.Request.Types.RequestType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "userDto" field.</summary>
    public const int UserDtoFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::grpc.UserDto UserDto {
      get { return dataCase_ == DataOneofCase.UserDto ? (global::grpc.UserDto) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.UserDto;
      }
    }

    /// <summary>Field number for the "capacity" field.</summary>
    public const int CapacityFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Capacity {
      get { return dataCase_ == DataOneofCase.Capacity ? (int) data_ : 0; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.Capacity;
      }
    }

    /// <summary>Field number for the "teamName" field.</summary>
    public const int TeamNameFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TeamName {
      get { return dataCase_ == DataOneofCase.TeamName ? (string) data_ : ""; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        dataCase_ = DataOneofCase.TeamName;
      }
    }

    /// <summary>Field number for the "credentialsDto" field.</summary>
    public const int CredentialsDtoFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::grpc.CredentialsDto CredentialsDto {
      get { return dataCase_ == DataOneofCase.CredentialsDto ? (global::grpc.CredentialsDto) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.CredentialsDto;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 6;
    private string error_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      UserDto = 2,
      Capacity = 3,
      TeamName = 4,
      CredentialsDto = 5,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(UserDto, other.UserDto)) return false;
      if (Capacity != other.Capacity) return false;
      if (TeamName != other.TeamName) return false;
      if (!object.Equals(CredentialsDto, other.CredentialsDto)) return false;
      if (Error != other.Error) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::grpc.Request.Types.RequestType.Login) hash ^= Type.GetHashCode();
      if (dataCase_ == DataOneofCase.UserDto) hash ^= UserDto.GetHashCode();
      if (dataCase_ == DataOneofCase.Capacity) hash ^= Capacity.GetHashCode();
      if (dataCase_ == DataOneofCase.TeamName) hash ^= TeamName.GetHashCode();
      if (dataCase_ == DataOneofCase.CredentialsDto) hash ^= CredentialsDto.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::grpc.Request.Types.RequestType.Login) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (dataCase_ == DataOneofCase.UserDto) {
        output.WriteRawTag(18);
        output.WriteMessage(UserDto);
      }
      if (dataCase_ == DataOneofCase.Capacity) {
        output.WriteRawTag(24);
        output.WriteInt32(Capacity);
      }
      if (dataCase_ == DataOneofCase.TeamName) {
        output.WriteRawTag(34);
        output.WriteString(TeamName);
      }
      if (dataCase_ == DataOneofCase.CredentialsDto) {
        output.WriteRawTag(42);
        output.WriteMessage(CredentialsDto);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::grpc.Request.Types.RequestType.Login) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (dataCase_ == DataOneofCase.UserDto) {
        output.WriteRawTag(18);
        output.WriteMessage(UserDto);
      }
      if (dataCase_ == DataOneofCase.Capacity) {
        output.WriteRawTag(24);
        output.WriteInt32(Capacity);
      }
      if (dataCase_ == DataOneofCase.TeamName) {
        output.WriteRawTag(34);
        output.WriteString(TeamName);
      }
      if (dataCase_ == DataOneofCase.CredentialsDto) {
        output.WriteRawTag(42);
        output.WriteMessage(CredentialsDto);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::grpc.Request.Types.RequestType.Login) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (dataCase_ == DataOneofCase.UserDto) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserDto);
      }
      if (dataCase_ == DataOneofCase.Capacity) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Capacity);
      }
      if (dataCase_ == DataOneofCase.TeamName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TeamName);
      }
      if (dataCase_ == DataOneofCase.CredentialsDto) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CredentialsDto);
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::grpc.Request.Types.RequestType.Login) {
        Type = other.Type;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      switch (other.DataCase) {
        case DataOneofCase.UserDto:
          if (UserDto == null) {
            UserDto = new global::grpc.UserDto();
          }
          UserDto.MergeFrom(other.UserDto);
          break;
        case DataOneofCase.Capacity:
          Capacity = other.Capacity;
          break;
        case DataOneofCase.TeamName:
          TeamName = other.TeamName;
          break;
        case DataOneofCase.CredentialsDto:
          if (CredentialsDto == null) {
            CredentialsDto = new global::grpc.CredentialsDto();
          }
          CredentialsDto.MergeFrom(other.CredentialsDto);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::grpc.Request.Types.RequestType) input.ReadEnum();
            break;
          }
          case 18: {
            global::grpc.UserDto subBuilder = new global::grpc.UserDto();
            if (dataCase_ == DataOneofCase.UserDto) {
              subBuilder.MergeFrom(UserDto);
            }
            input.ReadMessage(subBuilder);
            UserDto = subBuilder;
            break;
          }
          case 24: {
            Capacity = input.ReadInt32();
            break;
          }
          case 34: {
            TeamName = input.ReadString();
            break;
          }
          case 42: {
            global::grpc.CredentialsDto subBuilder = new global::grpc.CredentialsDto();
            if (dataCase_ == DataOneofCase.CredentialsDto) {
              subBuilder.MergeFrom(CredentialsDto);
            }
            input.ReadMessage(subBuilder);
            CredentialsDto = subBuilder;
            break;
          }
          case 50: {
            Error = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::grpc.Request.Types.RequestType) input.ReadEnum();
            break;
          }
          case 18: {
            global::grpc.UserDto subBuilder = new global::grpc.UserDto();
            if (dataCase_ == DataOneofCase.UserDto) {
              subBuilder.MergeFrom(UserDto);
            }
            input.ReadMessage(subBuilder);
            UserDto = subBuilder;
            break;
          }
          case 24: {
            Capacity = input.ReadInt32();
            break;
          }
          case 34: {
            TeamName = input.ReadString();
            break;
          }
          case 42: {
            global::grpc.CredentialsDto subBuilder = new global::grpc.CredentialsDto();
            if (dataCase_ == DataOneofCase.CredentialsDto) {
              subBuilder.MergeFrom(CredentialsDto);
            }
            input.ReadMessage(subBuilder);
            CredentialsDto = subBuilder;
            break;
          }
          case 50: {
            Error = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Request message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum RequestType {
        [pbr::OriginalName("LOGIN")] Login = 0,
        [pbr::OriginalName("GET_RACES")] GetRaces = 1,
        [pbr::OriginalName("SEARCH_RACES")] SearchRaces = 2,
        [pbr::OriginalName("FILTER_RACES")] FilterRaces = 3,
        [pbr::OriginalName("GET_PARTICIPANTS")] GetParticipants = 4,
        [pbr::OriginalName("REGISTER")] Register = 5,
        [pbr::OriginalName("LOGOUT")] Logout = 6,
      }

    }
    #endregion

  }

  public sealed partial class Response : pb::IMessage<Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpc.GreetReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      type_ = other.type_;
      user_ = other.user_ != null ? other.user_.Clone() : null;
      races_ = other.races_.Clone();
      raceDtos_ = other.raceDtos_.Clone();
      raceDto_ = other.raceDto_ != null ? other.raceDto_.Clone() : null;
      participants_ = other.participants_.Clone();
      error_ = other.error_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::grpc.Response.Types.ResponseType type_ = global::grpc.Response.Types.ResponseType.Ok;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::grpc.Response.Types.ResponseType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 2;
    private global::grpc.User user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::grpc.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "races" field.</summary>
    public const int RacesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::grpc.Race> _repeated_races_codec
        = pb::FieldCodec.ForMessage(26, global::grpc.Race.Parser);
    private readonly pbc::RepeatedField<global::grpc.Race> races_ = new pbc::RepeatedField<global::grpc.Race>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::grpc.Race> Races {
      get { return races_; }
    }

    /// <summary>Field number for the "raceDtos" field.</summary>
    public const int RaceDtosFieldNumber = 4;
    private static readonly pb::FieldCodec<global::grpc.RaceDto> _repeated_raceDtos_codec
        = pb::FieldCodec.ForMessage(34, global::grpc.RaceDto.Parser);
    private readonly pbc::RepeatedField<global::grpc.RaceDto> raceDtos_ = new pbc::RepeatedField<global::grpc.RaceDto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::grpc.RaceDto> RaceDtos {
      get { return raceDtos_; }
    }

    /// <summary>Field number for the "raceDto" field.</summary>
    public const int RaceDtoFieldNumber = 5;
    private global::grpc.RaceDto raceDto_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::grpc.RaceDto RaceDto {
      get { return raceDto_; }
      set {
        raceDto_ = value;
      }
    }

    /// <summary>Field number for the "participants" field.</summary>
    public const int ParticipantsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::grpc.ParticipantDto> _repeated_participants_codec
        = pb::FieldCodec.ForMessage(50, global::grpc.ParticipantDto.Parser);
    private readonly pbc::RepeatedField<global::grpc.ParticipantDto> participants_ = new pbc::RepeatedField<global::grpc.ParticipantDto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::grpc.ParticipantDto> Participants {
      get { return participants_; }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 7;
    private string error_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(User, other.User)) return false;
      if(!races_.Equals(other.races_)) return false;
      if(!raceDtos_.Equals(other.raceDtos_)) return false;
      if (!object.Equals(RaceDto, other.RaceDto)) return false;
      if(!participants_.Equals(other.participants_)) return false;
      if (Error != other.Error) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::grpc.Response.Types.ResponseType.Ok) hash ^= Type.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      hash ^= races_.GetHashCode();
      hash ^= raceDtos_.GetHashCode();
      if (raceDto_ != null) hash ^= RaceDto.GetHashCode();
      hash ^= participants_.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::grpc.Response.Types.ResponseType.Ok) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
      races_.WriteTo(output, _repeated_races_codec);
      raceDtos_.WriteTo(output, _repeated_raceDtos_codec);
      if (raceDto_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RaceDto);
      }
      participants_.WriteTo(output, _repeated_participants_codec);
      if (Error.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::grpc.Response.Types.ResponseType.Ok) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
      races_.WriteTo(ref output, _repeated_races_codec);
      raceDtos_.WriteTo(ref output, _repeated_raceDtos_codec);
      if (raceDto_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RaceDto);
      }
      participants_.WriteTo(ref output, _repeated_participants_codec);
      if (Error.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::grpc.Response.Types.ResponseType.Ok) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      size += races_.CalculateSize(_repeated_races_codec);
      size += raceDtos_.CalculateSize(_repeated_raceDtos_codec);
      if (raceDto_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RaceDto);
      }
      size += participants_.CalculateSize(_repeated_participants_codec);
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::grpc.Response.Types.ResponseType.Ok) {
        Type = other.Type;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::grpc.User();
        }
        User.MergeFrom(other.User);
      }
      races_.Add(other.races_);
      raceDtos_.Add(other.raceDtos_);
      if (other.raceDto_ != null) {
        if (raceDto_ == null) {
          RaceDto = new global::grpc.RaceDto();
        }
        RaceDto.MergeFrom(other.RaceDto);
      }
      participants_.Add(other.participants_);
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::grpc.Response.Types.ResponseType) input.ReadEnum();
            break;
          }
          case 18: {
            if (user_ == null) {
              User = new global::grpc.User();
            }
            input.ReadMessage(User);
            break;
          }
          case 26: {
            races_.AddEntriesFrom(input, _repeated_races_codec);
            break;
          }
          case 34: {
            raceDtos_.AddEntriesFrom(input, _repeated_raceDtos_codec);
            break;
          }
          case 42: {
            if (raceDto_ == null) {
              RaceDto = new global::grpc.RaceDto();
            }
            input.ReadMessage(RaceDto);
            break;
          }
          case 50: {
            participants_.AddEntriesFrom(input, _repeated_participants_codec);
            break;
          }
          case 58: {
            Error = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::grpc.Response.Types.ResponseType) input.ReadEnum();
            break;
          }
          case 18: {
            if (user_ == null) {
              User = new global::grpc.User();
            }
            input.ReadMessage(User);
            break;
          }
          case 26: {
            races_.AddEntriesFrom(ref input, _repeated_races_codec);
            break;
          }
          case 34: {
            raceDtos_.AddEntriesFrom(ref input, _repeated_raceDtos_codec);
            break;
          }
          case 42: {
            if (raceDto_ == null) {
              RaceDto = new global::grpc.RaceDto();
            }
            input.ReadMessage(RaceDto);
            break;
          }
          case 50: {
            participants_.AddEntriesFrom(ref input, _repeated_participants_codec);
            break;
          }
          case 58: {
            Error = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Response message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ResponseType {
        [pbr::OriginalName("OK")] Ok = 0,
        [pbr::OriginalName("ERROR")] Error = 1,
        [pbr::OriginalName("REGISTERED_PARTICIPANT")] RegisteredParticipant = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
